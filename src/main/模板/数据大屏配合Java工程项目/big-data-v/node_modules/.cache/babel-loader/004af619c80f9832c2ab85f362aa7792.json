{"remainingRequest":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\babel-loader\\lib\\index.js!D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\src\\components\\echart\\centerLeft\\centerLeft2Chart\\chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\src\\components\\echart\\centerLeft\\centerLeft2Chart\\chart.vue","mtime":1621991962000},{"path":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java\\No.4-2103\\day0813 05\\day05dubbo+数据大屏项目\\代码\\big-data-v\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBFY2hhcnQgZnJvbSAnQC9jb21tb24vZWNoYXJ0JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiB7fQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEVjaGFydDogRWNoYXJ0CiAgfSwKICBwcm9wczogewogICAgY2RhdGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNkYXRhOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3RGF0YSkgewogICAgICAgIC8vIOiuvue9rueCueeahOS9jee9rijnu4/nuqzluqYpCiAgICAgICAgdmFyIGdlb0Nvb3JkTWFwID0gewogICAgICAgICAg5Y6m6Zeo5biCOiBbMTE4LjExMDIyLCAyNC40OTA0NzQsIDIwXSwKICAgICAgICAgIOemj+W3nuW4gjogWzExOS4yMDYyMzksIDI2LjI3NTMwMiwgMjBdLAogICAgICAgICAg5rOJ5bee5biCOiBbMTE4LjU4OTQyMSwgMjQuOTA4ODUzLCAyMF0sCiAgICAgICAgICDmvLPlt57luII6IFsxMTcuNTYxODAxLCAyNC41MTA4OTcsIDIwXSwKICAgICAgICAgIOm+meWyqeW4gjogWzExNi44Mjk3OCwgMjUuMzkxNjAzLCAyMF0sCiAgICAgICAgICDojobnlLDluII6IFsxMTkuMDA3NTU4LCAyNS41OTEwMTEsIDIwXSwKICAgICAgICAgIOS4ieaYjuW4gjogWzExNy40MzUwMDEsIDI2LjQ2NTQ0NCwgMjBdLAogICAgICAgICAg5Y2X5bmz5biCOiBbMTE4LjE3ODQ1OSwgMjcuNTM1NjI3LCAyMF0sCiAgICAgICAgICDlroHlvrfluII6IFsxMTkuNTI3MDgyLCAyNy4xNTkyNCwgMjBdCiAgICAgICAgfTsKICAgICAgICB2YXIgc2VyaWVzRGF0YSA9IFt7CiAgICAgICAgICBuYW1lOiAn5Y6m6Zeo5biCJwogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICfnpo/lt57luIInCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+azieW3nuW4gicKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAn5ryz5bee5biCJwogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICfpvpnlsqnluIInCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+iOhueUsOW4gicKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAn5LiJ5piO5biCJwogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICfljZflubPluIInCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+WugeW+t+W4gicKICAgICAgICB9XTsKCiAgICAgICAgdmFyIGNvbnZlcnREYXRhID0gZnVuY3Rpb24gY29udmVydERhdGEoZGF0YSkgewogICAgICAgICAgdmFyIHNjYXR0ZXJEYXRhID0gW107CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBnZW9Db29yZCA9IGdlb0Nvb3JkTWFwW2RhdGFbaV0ubmFtZV07CgogICAgICAgICAgICBpZiAoZ2VvQ29vcmQpIHsKICAgICAgICAgICAgICBzY2F0dGVyRGF0YS5wdXNoKHsKICAgICAgICAgICAgICAgIG5hbWU6IGRhdGFbaV0ubmFtZSwKICAgICAgICAgICAgICAgIHZhbHVlOiBnZW9Db29yZC5jb25jYXQoZGF0YVtpXS52YWx1ZSkKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBzY2F0dGVyRGF0YTsKICAgICAgICB9OwoKICAgICAgICB0aGlzLm9wdGlvbnMgPSB7CiAgICAgICAgICBzaG93TGVnZW5kU3ltYm9sOiB0cnVlLAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGZvbnRTaXplOiAxNCwKICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAyMgogICAgICAgICAgICB9LAogICAgICAgICAgICBwb3NpdGlvbjogZnVuY3Rpb24gcG9zaXRpb24ocG9pbnQpIHsKICAgICAgICAgICAgICAvLyDlm7rlrprlnKjpobbpg6gKICAgICAgICAgICAgICByZXR1cm4gW3BvaW50WzBdICsgNTAsIHBvaW50WzFdIC0gMjBdOwogICAgICAgICAgICB9IC8vIOWmguaenOmcgOimgeiHquWumuS5iSB0b29sdGlw5qC35byP77yM6ZyA6KaB5L2/55SoZm9ybWF0dGVyCgogICAgICAgICAgICAvKgogICAgICAgICAgICAgIGZvcm1hdHRlcjogcGFyYW1zID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiBgPGRpdiBzdHlsZT0iIj4gLi4uIDwvZGl2PmAKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICovCgogICAgICAgICAgfSwKICAgICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgIG1heDogMTAsCiAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICBzZXJpZXNJbmRleDogMCwKICAgICAgICAgICAgLy8g6aKc6ImyCiAgICAgICAgICAgIGluUmFuZ2U6IHsKICAgICAgICAgICAgICBjb2xvcjogWydyZ2JhKDQxLDE2NiwyMDYsIC41KScsICdyZ2JhKDY5LDExNywyNDUsIC45KSddCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvLyDlupXpg6jog4zmma8KICAgICAgICAgIGdlbzogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBhc3BlY3RTY2FsZTogMC44NSwKICAgICAgICAgICAgLy/plb/lrr3mr5QKICAgICAgICAgICAgem9vbTogMS4yLAogICAgICAgICAgICB0b3A6ICcxMCUnLAogICAgICAgICAgICBsZWZ0OiAnMTYlJywKICAgICAgICAgICAgbWFwOiAn56aP5bu6JywKICAgICAgICAgICAgcm9hbTogZmFsc2UsCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgYXJlYUNvbG9yOiAncmdiYSgwLDAsMCwwKScsCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoNywxMTQsMjA0LCAuOCknLAogICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogNSwKICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFk6IDUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICBhcmVhQ29sb3I6ICcjMDBhZWVmJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogJ+ebuOWFs+aMh+aVsCcsCiAgICAgICAgICAgIHR5cGU6ICdtYXAnLAogICAgICAgICAgICBhc3BlY3RTY2FsZTogMC44NSwKICAgICAgICAgICAgLy/plb/lrr3mr5QKICAgICAgICAgICAgem9vbTogMS4yLAogICAgICAgICAgICBtYXBUeXBlOiAn56aP5bu6JywKICAgICAgICAgICAgLy8g6Ieq5a6a5LmJ5omp5bGV5Zu+6KGo57G75Z6LCiAgICAgICAgICAgIHRvcDogJzEwJScsCiAgICAgICAgICAgIGxlZnQ6ICcxNiUnLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAncmVkJywKICAgICAgICAgICAgICAgIGFyZWFDb2xvcjogJ3JnYmEoMTksNTQsMTYyLCAuNSknLAogICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDAsMjQyLDI1MiwuMyknLAogICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiA3LAogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICcjMDBmMmZjJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgIGFyZWFDb2xvcjogJyM0ZjdmZmYnLAogICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDAsMjQyLDI1MiwuNiknLAogICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwZjJmYycKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIocGFyYW1zKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIiIuY29uY2F0KHBhcmFtcy5uYW1lKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246ICdpbnNpZGVSaWdodCcsCiAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTQsCiAgICAgICAgICAgICAgICBjb2xvcjogJyNlZmVmZWYnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGE6IG5ld0RhdGEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdHlwZTogJ2VmZmVjdFNjYXR0ZXInLAogICAgICAgICAgICBjb29yZGluYXRlU3lzdGVtOiAnZ2VvJywKICAgICAgICAgICAgc3ltYm9sU2l6ZTogNywKICAgICAgICAgICAgZWZmZWN0VHlwZTogJ3JpcHBsZScsCiAgICAgICAgICAgIGxlZ2VuZEhvdmVyTGluazogZmFsc2UsCiAgICAgICAgICAgIHNob3dFZmZlY3RPbjogJ3JlbmRlcicsCiAgICAgICAgICAgIHJpcHBsZUVmZmVjdDogewogICAgICAgICAgICAgIHBlcmlvZDogNCwKICAgICAgICAgICAgICBzY2FsZTogMi41LAogICAgICAgICAgICAgIGJydXNoVHlwZTogJ3N0cm9rZScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgemxldmVsOiAxLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzk5RkJGRScsCiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiA1LAogICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICcjZmZmJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YTogY29udmVydERhdGEoc2VyaWVzRGF0YSkKICAgICAgICAgIH1dCiAgICAgICAgfTsgLy8g6YeN5paw6YCJ5oup5Yy65Z+fCgogICAgICAgIHRoaXMuaGFuZGxlTWFwUmFuZG9tU2VsZWN0KCk7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8g5byA5ZCv5a6a5pe25ZmoCiAgICBzdGFydEludGVydmFsOiBmdW5jdGlvbiBzdGFydEludGVydmFsKCkgewogICAgICB2YXIgX3NlbGYgPSB0aGlzOyAvLyDlupTpgJrov4fmjqXlj6Pojrflj5bphY3nva7ml7bpl7TvvIzmmoLml7blhpnmrbs1cwoKCiAgICAgIHZhciB0aW1lID0gMjAwMDsKCiAgICAgIGlmICh0aGlzLmludGVydmFsSWQgIT09IG51bGwpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCk7CiAgICAgIH0KCiAgICAgIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfc2VsZi5yZVNlbGVjdE1hcFJhbmRvbUFyZWEoKTsKICAgICAgfSwgdGltZSk7CiAgICB9LAogICAgLy8g6YeN5paw6ZqP5py66YCJ5Lit5Zyw5Zu+5Yy65Z+fCiAgICByZVNlbGVjdE1hcFJhbmRvbUFyZWE6IGZ1bmN0aW9uIHJlU2VsZWN0TWFwUmFuZG9tQXJlYSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBsZW5ndGggPSA5OwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIG1hcCA9IF90aGlzLiRyZWZzLmNlbnRyZUxlZnQyQ2hhcnRSZWYuY2hhcnQ7CiAgICAgICAgdmFyIGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuZ3RoKTsKCiAgICAgICAgd2hpbGUgKGluZGV4ID09PSBfdGhpcy5wcmVTZWxlY3RNYXBJbmRleCB8fCBpbmRleCA+PSBsZW5ndGgpIHsKICAgICAgICAgIGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuZ3RoKTsKICAgICAgICB9CgogICAgICAgIG1hcC5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgICB0eXBlOiAnbWFwVW5TZWxlY3QnLAogICAgICAgICAgc2VyaWVzSW5kZXg6IDAsCiAgICAgICAgICBkYXRhSW5kZXg6IF90aGlzLnByZVNlbGVjdE1hcEluZGV4CiAgICAgICAgfSk7CiAgICAgICAgbWFwLmRpc3BhdGNoQWN0aW9uKHsKICAgICAgICAgIHR5cGU6ICdzaG93VGlwJywKICAgICAgICAgIHNlcmllc0luZGV4OiAwLAogICAgICAgICAgZGF0YUluZGV4OiBpbmRleAogICAgICAgIH0pOwogICAgICAgIG1hcC5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgICB0eXBlOiAnbWFwU2VsZWN0JywKICAgICAgICAgIHNlcmllc0luZGV4OiAwLAogICAgICAgICAgZGF0YUluZGV4OiBpbmRleAogICAgICAgIH0pOwogICAgICAgIF90aGlzLnByZVNlbGVjdE1hcEluZGV4ID0gaW5kZXg7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZU1hcFJhbmRvbVNlbGVjdDogZnVuY3Rpb24gaGFuZGxlTWFwUmFuZG9tU2VsZWN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgbWFwID0gX3RoaXMyLiRyZWZzLmNlbnRyZUxlZnQyQ2hhcnRSZWYuY2hhcnQ7CiAgICAgICAgdmFyIF9zZWxmID0gX3RoaXMyOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3NlbGYucmVTZWxlY3RNYXBSYW5kb21BcmVhKCk7CiAgICAgICAgfSwgMCk7IC8vIOenu+WFpeWMuuWfn++8jOa4hemZpOWumuaXtuWZqOOAgeWPlua2iOS5i+WJjemAieS4reW5tumAieS4reW9k+WJjQoKICAgICAgICBtYXAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3NlbGYuaW50ZXJ2YWxJZCk7CiAgICAgICAgICBtYXAuZGlzcGF0Y2hBY3Rpb24oewogICAgICAgICAgICB0eXBlOiAnbWFwVW5TZWxlY3QnLAogICAgICAgICAgICBzZXJpZXNJbmRleDogMCwKICAgICAgICAgICAgZGF0YUluZGV4OiBfc2VsZi5wcmVTZWxlY3RNYXBJbmRleAogICAgICAgICAgfSk7CiAgICAgICAgICBtYXAuZGlzcGF0Y2hBY3Rpb24oewogICAgICAgICAgICB0eXBlOiAnbWFwU2VsZWN0JywKICAgICAgICAgICAgc2VyaWVzSW5kZXg6IDAsCiAgICAgICAgICAgIGRhdGFJbmRleDogcGFyYW1zLmRhdGFJbmRleAogICAgICAgICAgfSk7CiAgICAgICAgICBfc2VsZi5wcmVTZWxlY3RNYXBJbmRleCA9IHBhcmFtcy5kYXRhSW5kZXg7CiAgICAgICAgfSk7IC8vIOenu+WHuuWMuuWfn+mHjeaWsOmaj+acuumAieS4reWcsOWbvuWMuuWfn++8jOW5tuW8gOWQr+WumuaXtuWZqAoKICAgICAgICBtYXAub24oJ2dsb2JhbG91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF9zZWxmLnJlU2VsZWN0TWFwUmFuZG9tQXJlYSgpOwoKICAgICAgICAgIF9zZWxmLnN0YXJ0SW50ZXJ2YWwoKTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMyLnN0YXJ0SW50ZXJ2YWwoKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Echart\n      id=\"centreLeft2Chart\"\n      ref=\"centreLeft2ChartRef\"\n      :options=\"options\"\n      height=\"4.5rem\"\n      width=\"4.125rem\"\n    ></Echart>\n  </div>\n</template>\n\n<script>\nimport Echart from '@/common/echart';\nexport default {\n  data() {\n    return {\n      options: {},\n    };\n  },\n  components: {\n    Echart,\n  },\n  props: {\n    cdata: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  watch: {\n    cdata: {\n      handler(newData) {\n        // 设置点的位置(经纬度)\n        const geoCoordMap = {\n          厦门市: [118.11022, 24.490474, 20],\n          福州市: [119.206239, 26.275302, 20],\n          泉州市: [118.589421, 24.908853, 20],\n          漳州市: [117.561801, 24.510897, 20],\n          龙岩市: [116.82978, 25.391603, 20],\n          莆田市: [119.007558, 25.591011, 20],\n          三明市: [117.435001, 26.465444, 20],\n          南平市: [118.178459, 27.535627, 20],\n          宁德市: [119.527082, 27.15924, 20],\n        };\n        let seriesData = [\n          {\n            name: '厦门市',\n          },\n          {\n            name: '福州市',\n          },\n          {\n            name: '泉州市',\n          },\n          {\n            name: '漳州市',\n          },\n          {\n            name: '龙岩市',\n          },\n          {\n            name: '莆田市',\n          },\n          {\n            name: '三明市',\n          },\n          {\n            name: '南平市',\n          },\n          {\n            name: '宁德市',\n          },\n        ];\n        let convertData = function (data) {\n          let scatterData = [];\n          for (var i = 0; i < data.length; i++) {\n            var geoCoord = geoCoordMap[data[i].name];\n            if (geoCoord) {\n              scatterData.push({\n                name: data[i].name,\n                value: geoCoord.concat(data[i].value),\n              });\n            }\n          }\n          return scatterData;\n        };\n        this.options = {\n          showLegendSymbol: true,\n          tooltip: {\n            trigger: 'item',\n            textStyle: {\n              fontSize: 14,\n              lineHeight: 22,\n            },\n            position: point => {\n              // 固定在顶部\n              return [point[0] + 50, point[1] - 20];\n            },\n            // 如果需要自定义 tooltip样式，需要使用formatter\n            /*\n              formatter: params => {\n                return `<div style=\"\"> ... </div>`\n              }\n            */\n          },\n          visualMap: {\n            min: 0,\n            max: 10,\n            show: false,\n            seriesIndex: 0,\n            // 颜色\n            inRange: {\n              color: ['rgba(41,166,206, .5)', 'rgba(69,117,245, .9)'],\n            },\n          },\n          // 底部背景\n          geo: {\n            show: true,\n            aspectScale: 0.85, //长宽比\n            zoom: 1.2,\n            top: '10%',\n            left: '16%',\n            map: '福建',\n            roam: false,\n            itemStyle: {\n              normal: {\n                areaColor: 'rgba(0,0,0,0)',\n                shadowColor: 'rgba(7,114,204, .8)',\n                shadowOffsetX: 5,\n                shadowOffsetY: 5,\n              },\n              emphasis: {\n                areaColor: '#00aeef',\n              },\n            },\n          },\n          series: [\n            {\n              name: '相关指数',\n              type: 'map',\n              aspectScale: 0.85, //长宽比\n              zoom: 1.2,\n              mapType: '福建', // 自定义扩展图表类型\n              top: '10%',\n              left: '16%',\n              itemStyle: {\n                normal: {\n                  color: 'red',\n                  areaColor: 'rgba(19,54,162, .5)',\n                  borderColor: 'rgba(0,242,252,.3)',\n                  borderWidth: 1,\n                  shadowBlur: 7,\n                  shadowColor: '#00f2fc',\n                },\n                emphasis: {\n                  areaColor: '#4f7fff',\n                  borderColor: 'rgba(0,242,252,.6)',\n                  borderWidth: 2,\n                  shadowBlur: 10,\n                  shadowColor: '#00f2fc',\n                },\n              },\n              label: {\n                formatter: params => `${params.name}`,\n                show: true,\n                position: 'insideRight',\n                textStyle: {\n                  fontSize: 14,\n                  color: '#efefef',\n                },\n                emphasis: {\n                  textStyle: {\n                    color: '#fff',\n                  },\n                },\n              },\n              data: newData,\n            },\n            {\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              symbolSize: 7,\n              effectType: 'ripple',\n              legendHoverLink: false,\n              showEffectOn: 'render',\n              rippleEffect: {\n                period: 4,\n                scale: 2.5,\n                brushType: 'stroke',\n              },\n              zlevel: 1,\n              itemStyle: {\n                normal: {\n                  color: '#99FBFE',\n                  shadowBlur: 5,\n                  shadowColor: '#fff',\n                },\n              },\n              data: convertData(seriesData),\n            },\n          ],\n        };\n        // 重新选择区域\n        this.handleMapRandomSelect();\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  methods: {\n    // 开启定时器\n    startInterval() {\n      const _self = this;\n      // 应通过接口获取配置时间，暂时写死5s\n      const time = 2000;\n      if (this.intervalId !== null) {\n        clearInterval(this.intervalId);\n      }\n      this.intervalId = setInterval(() => {\n        _self.reSelectMapRandomArea();\n      }, time);\n    },\n    // 重新随机选中地图区域\n    reSelectMapRandomArea() {\n      const length = 9;\n      this.$nextTick(() => {\n        const map = this.$refs.centreLeft2ChartRef.chart;\n        let index = Math.floor(Math.random() * length);\n        while (index === this.preSelectMapIndex || index >= length) {\n          index = Math.floor(Math.random() * length);\n        }\n        map.dispatchAction({\n          type: 'mapUnSelect',\n          seriesIndex: 0,\n          dataIndex: this.preSelectMapIndex,\n        });\n        map.dispatchAction({\n          type: 'showTip',\n          seriesIndex: 0,\n          dataIndex: index,\n        });\n        map.dispatchAction({\n          type: 'mapSelect',\n          seriesIndex: 0,\n          dataIndex: index,\n        });\n        this.preSelectMapIndex = index;\n      });\n    },\n    handleMapRandomSelect() {\n      this.$nextTick(() => {\n        const map = this.$refs.centreLeft2ChartRef.chart;\n        const _self = this;\n        setTimeout(() => {\n          _self.reSelectMapRandomArea();\n        }, 0);\n        // 移入区域，清除定时器、取消之前选中并选中当前\n        map.on('mouseover', function (params) {\n          clearInterval(_self.intervalId);\n          map.dispatchAction({\n            type: 'mapUnSelect',\n            seriesIndex: 0,\n            dataIndex: _self.preSelectMapIndex,\n          });\n          map.dispatchAction({\n            type: 'mapSelect',\n            seriesIndex: 0,\n            dataIndex: params.dataIndex,\n          });\n          _self.preSelectMapIndex = params.dataIndex;\n        });\n        // 移出区域重新随机选中地图区域，并开启定时器\n        map.on('globalout', function () {\n          _self.reSelectMapRandomArea();\n          _self.startInterval();\n        });\n        this.startInterval();\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components/echart/centerLeft/centerLeft2Chart"}]}