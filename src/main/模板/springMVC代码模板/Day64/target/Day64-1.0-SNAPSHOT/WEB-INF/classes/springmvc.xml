<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  包扫描器，扫描加载到spring工厂 -->
    <context:component-scan base-package="com.shine.controller"></context:component-scan>

    <!--  视图解析器，把控制器返回的内容解析之后加载运行  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--    控制器结果加前缀和后缀    -->
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--  注册驱动  -->
    <mvc:annotation-driven>
        <!-- 安装FastJson,转换器 -->
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!-- 声明转换类型:json -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--
        声明异常解析器
        自动执行，连id不用配置
     -->
    <bean class="com.shine.resolver.MyExceptionResolver"></bean>

    <!-- 上传解析器
	     id必须是：“multipartResolver”
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大可上传的文件大小  单位：byte  超出后会抛出MaxUploadSizeExceededException异常，可以异常解析器捕获 -->
        <!-- <property name="maxUploadSize" value="1048576"></property>-->
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/inter02/index"/>
            <mvc:mapping path="/inter02/menu"/>
            <mvc:mapping path="/inter02/info"/>
            <!-- <mvc:mapping path="/inter/test*"/>test开头 -->
            <!-- <mvc:mapping path="/inter/**"/>  /** 任意多级任意路径 -->
            <!--<mvc:exclude-mapping path="/inter/a/**"/>   不拦截此路径-->
            <bean class="com.shine.interceptor.MyLoginInterceptor"></bean>   <!--自定义的拦截器类-->
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/upload01/up02"/>
            <bean class="com.shine.interceptor.MyFileUploadInterceptor">
                <property name="maxContentLength" value="1048576"></property>
            </bean>
        </mvc:interceptor>

    </mvc:interceptors>

    <!--
      额外的增加一个handler，且其requestMapping:  "/**" 可以匹配所有请求，但是优先级最低
      所以如果其他所有的handler都匹配不上，请求会转向 "/**" ,恰好，这个handler就是处理静态资源的
      处理方式：将请求转会到tomcat中名为default的Servlet
    -->
    <mvc:default-servlet-handler/>
    <!--  http://localhost:8080/Day62/hhhh/index.html  -->
<!--    <mvc:resources mapping="/hhhh/**" location="/html/"></mvc:resources>-->
<!--    <mvc:resources mapping="/cccc/**" location="/css/"></mvc:resources>-->
</beans>

